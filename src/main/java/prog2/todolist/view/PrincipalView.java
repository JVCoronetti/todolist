/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prog2.todolist.view;

import prog2.todolist.controller.TarefaController;
import prog2.todolist.model.Tarefa;
import prog2.todolist.util.Placeholder;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.text.SimpleDateFormat;
import java.util.Date;


/**
 *
 * @author Coronetti
 */
public class PrincipalView extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalView
     */
    public PrincipalView() {
        initComponents();
        iniciarPlaceholders();
        grupoStatus.add(rbConcluida);
        grupoStatus.add(rbNaoConcluida);
        atualizarTabela();
        tblTarefas.getSelectionModel().addListSelectionListener(e -> preencherCampos());
    }
    
    private void iniciarPlaceholders() {
        Placeholder.add(txtTitulo, "Título da tarefa");
        Placeholder.add(txtDescricao, "Descrição da tarefa");
        Placeholder.add(txtData, "dd/MM/yyyy");
    }
    
    private boolean validarCampos() {
        boolean valido = true;

        txtTitulo.setBackground(Color.WHITE);
        txtDescricao.setBackground(Color.WHITE);
        txtData.setBackground(Color.WHITE);

        if (txtTitulo.getText().trim().isEmpty() || txtTitulo.getText().equals("Título da tarefa")) {
            txtTitulo.setBackground(new Color(255, 200, 200));
            valido = false;
        }

        if (txtDescricao.getText().trim().isEmpty() || txtDescricao.getText().equals("Descrição da tarefa")) {
            txtDescricao.setBackground(new Color(255, 200, 200));
            valido = false;
        }

        if (txtData.getText().trim().isEmpty() || txtData.getText().equals("dd/MM/yyyy")) {
            txtData.setBackground(new Color(255, 200, 200));
            valido = false;
        }

        if (!valido) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
        }

        return valido;
    }
    
    private void atualizarTabela() {
        String[] colunas = {"Título", "Descrição", "Data", "Concluída"};
        DefaultTableModel modelo = new DefaultTableModel(colunas, 0);

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        for (Tarefa t : TarefaController.getListaDeTarefas()) {
            Object[] linha = {
                t.getTitulo(),
                t.getDescricao(),
                sdf.format(t.getData()),
                t.isConcluida() ? "Sim" : "Não"
            };
            modelo.addRow(linha);
        }

        tblTarefas.setModel(modelo);
    }
    
    private void preencherCampos() {
        int linha = tblTarefas.getSelectedRow();
        if (linha >= 0) {
            Tarefa t = TarefaController.getListaDeTarefas().get(linha);
            txtTitulo.setText(t.getTitulo());
            txtDescricao.setText(t.getDescricao());
            txtData.setText(new SimpleDateFormat("dd/MM/yyyy").format(t.getData()));
            if (t.isConcluida()) {
                rbConcluida.setSelected(true);
            } else {
                rbNaoConcluida.setSelected(true);
            }
        }
    }
    
    private void limparCampos() {
        txtTitulo.setText("Título da tarefa");
        txtDescricao.setText("Descrição da tarefa");
        txtData.setText("dd/MM/yyyy");
        grupoStatus.clearSelection();
        tblTarefas.clearSelection();

        txtTitulo.setBackground(Color.WHITE);
        txtDescricao.setBackground(Color.WHITE);
        txtData.setBackground(Color.WHITE);
    }

    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoStatus = new javax.swing.ButtonGroup();
        txtTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        txtData = new javax.swing.JFormattedTextField();
        rbConcluida = new javax.swing.JRadioButton();
        rbNaoConcluida = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTarefas = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtTitulo.setText("Titulo");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        txtData.setText("Data");

        rbConcluida.setText("Concluída");

        rbNaoConcluida.setText("Não Concluída");

        tblTarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTarefas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTarefasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTarefas);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbConcluida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNaoConcluida))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnLimpar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSair))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnSalvar)
                            .addGap(44, 44, 44)
                            .addComponent(btnExcluir))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbConcluida)
                            .addComponent(rbNaoConcluida))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar)
                            .addComponent(btnExcluir))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpar)
                            .addComponent(btnSair)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        if (validarCampos()) {
            try {
                String titulo = txtTitulo.getText().trim();
                String descricao = txtDescricao.getText().trim();
                Date data = new SimpleDateFormat("dd/MM/yyyy").parse(txtData.getText().trim());
                boolean concluida = rbConcluida.isSelected();

                int linhaSelecionada = tblTarefas.getSelectedRow();
                Tarefa tarefa = new Tarefa(titulo, descricao, concluida, data);

                if (linhaSelecionada >= 0) {
                    TarefaController.editarTarefa(linhaSelecionada, tarefa);
                } else {
                    TarefaController.addTarefa(tarefa);
                }

                limparCampos();
                atualizarTabela();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Data inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        int linha = tblTarefas.getSelectedRow();
        if (linha >= 0) {
            TarefaController.excluirTarefa(linha);
            limparCampos();
            atualizarTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma tarefa para excluir.");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        new LoginView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void tblTarefasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTarefasMouseClicked
        // TODO add your handling code here:
         int linha = tblTarefas.getSelectedRow();

    if (linha != -1) {
        DefaultTableModel model = (DefaultTableModel) tblTarefas.getModel();

        txtTitulo.setText(model.getValueAt(linha, 0).toString());
        txtTitulo.setForeground(Color.BLACK);

        txtDescricao.setText(model.getValueAt(linha, 1).toString());
        txtDescricao.setForeground(Color.BLACK);

        txtData.setText(model.getValueAt(linha, 2).toString());
        txtData.setForeground(Color.BLACK);

        String status = model.getValueAt(linha, 3).toString();
            if (status.equals("Sim")) {
                rbConcluida.setSelected(true);
            } else {
                rbNaoConcluida.setSelected(true);
            }
        }
    }//GEN-LAST:event_tblTarefasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup grupoStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbConcluida;
    private javax.swing.JRadioButton rbNaoConcluida;
    private javax.swing.JTable tblTarefas;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
